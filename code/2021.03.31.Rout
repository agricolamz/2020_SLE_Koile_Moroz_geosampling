
R version 4.0.4 (2021-02-15) -- "Lost Library Book"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> setwd("/home/agricolamz/work/materials/2021_SLE_Koile_Moroz_geosampling/generated_data/")
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.3     ✔ purrr   0.3.4
✔ tibble  3.1.0     ✔ dplyr   1.0.5
✔ tidyr   1.1.3     ✔ stringr 1.4.0
✔ readr   1.4.0     ✔ forcats 0.5.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> 
> files <- c("equidistant", "center_periphery")
> #villages_fraction <- seq(0.1, 0.9, 0.1)
> villages_fraction <- 0.1
> 
> gc()
          used (Mb) gc trigger  (Mb) max used (Mb)
Ncells  920991 49.2    1880837 100.5  1173850 62.7
Vcells 1489187 11.4    8388608  64.0  1973667 15.1
> 
> system.time(
+   map(files, function(file){
+     df <- data.table::fread(str_c(file, ".csv"))
+     colnames(df) <-
+       c(
+         'x',
+         'y',
+         'id',
+         'set',
+         'H',
+         'n_villages',
+         'n_categories',
+         'V1',
+         'V2',
+         'V3',
+         'V4',
+         'V5',
+         'V6',
+         'V7',
+         'V8',
+         'V9'
+       )
+     
+     # map_dfr(villages_fraction, function(i){
+     #   set.seed(42)
+     #   df %>% 
+     #     filter(set %in% sample(1:10000, 10)) %>% 
+     #     mutate(n_centers = round(n_villages*i)) %>% 
+     #     group_by(set, n_centers) %>% 
+     #     mutate(cluster = tryCatch(kmeans(as.matrix(tibble(x, y)), 
+     #                                      centers = unique(round(n_villages*i)))$cluster,
+     #                               error = function(e) "problem")) %>% 
+     #     group_by(set, cluster) %>% 
+     #     sample_n(1) %>% 
+     #     group_by(set, H, n_villages, n_categories) %>% 
+     #     summarise(variability = ifelse(cluster != "problem", 
+     #                                    length(unique(id))/n_categories,
+     #                                    NA), .groups = "drop") %>% 
+     #     mutate(type = "k-means",
+     #            space = file,
+     #            select_p = i) %>% 
+     #     distinct() %>% 
+     #     write_csv(str_c(file, "_k_means_results.csv"), append = TRUE)
+     #   gc()
+     # })
+     
+     map_dfr(villages_fraction, function(i){
+       set.seed(42)
+       df %>% 
+         filter(set %in% sample(1:10000, 10)) %>% 
+         mutate(n_centers = round(n_villages*i)) %>% 
+         group_by(set, n_centers) %>% 
+         mutate(cluster = tryCatch(cutree(hclust(dist(tibble(x, y))), 
+                                          k = unique(n_centers)),
+                                   error = function(e) "problem")) %>% 
+         group_by(set, cluster) %>% 
+         sample_n(1) %>% 
+         group_by(set, H, n_villages, n_categories) %>% 
+         summarise(variability = ifelse(cluster != "problem", 
+                                        length(unique(id))/n_categories,
+                                        NA), .groups = "drop") %>% 
+         mutate(type = "h-clust",
+                space = file,
+                select_p = i) %>% 
+         distinct() %>% 
+         write_csv(str_c(file, "_h_clust_results.csv"), append = TRUE)
+       gc()
+     })
+     rm(list=ls())
+     gc()
+   }))
Error: Argument 1 must have names.
Backtrace:
    █
 1. ├─base::system.time(...)
 2. └─purrr::map(...)
 3.   └─global::.f(.x[[i]], ...)
 4.     └─purrr::map_dfr(...)
 5.       └─dplyr::bind_rows(res, .id = .id)
Timing stopped at: 9.223 1.346 5.902
Execution halted
